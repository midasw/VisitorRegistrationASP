@model IEnumerable<VisitorRegistration_Models.Company>

@using VisitorRegistration_ASP.Models;
@using X.PagedList;

@{
    ViewData["Title"] = "Manage companies";
    Layout = "../Shared/_Layout.cshtml";
}

<div class="container">
    <h2 class="pb-2">
        @ViewData["Title"]
    </h2>
    <p>
        This is where you edit each company and add employees.
    </p>
    <partial name="_StatusMessage" model="@TempData["StatusMessage"]" />
</div>

<div class="bg-light mb-4">
    <div class="container">
        <div class="btn-toolbar justify-content-between py-3" role="toolbar" aria-label="Toolbar with button groups">
            <div class="btn-group" role="group">
                <a asp-action="Create" class="btn btn-primary">
                    New company
                </a>
            </div>
            @*<form method="get" asp-action="Index" class="input-group w-50">
                    <input class="form-control" type="search" name="q" value="@ViewData["Search"]" placeholder="Search" aria-label="Search">
                    <div class="input-group-append">
                        <button class="btn btn-secondary" type="submit">Go</button>
                    </div>
                </form>*@
            <div class="btn-group">
                <button type="button" class="btn btn-secondary dropdown-toggle" id="dropdownMenuButton" data-toggle="dropdown" aria-haspopup="true" aria-expanded="false">
                    With selected <span id="js-selection-counter" class="badge badge-dark"></span>
                </button>
                <div class="dropdown-menu dropdown-menu-right" aria-labelledby="dropdownMenuButton">
                    <button onclick="$('#btnDelete').click()" class="dropdown-item btn-secondary text-danger" type="button">Delete</button>
                </div>
            </div>
        </div>
    </div>
</div>

<div class="container">
    <form method="post" asp-action="Index">
        <table class="table table-hover js-table-check">
            <thead>
                <tr>
                    <th height="1" class="fit px-0">
                        <label class="d-block px-2 mb-0 text-center">
                            <input type="checkbox" class="align-middle">
                        </label>
                    </th>
                    <th>
                        @Html.DisplayNameFor(model => model.Name)
                    </th>
                    <th>
                        Employees
                    </th>
                    <th></th>
                </tr>
            </thead>
            <tbody>
                @foreach (var item in Model)
                {
                    <tr>
                        <td height="1" class="fit px-0">
                            <label class="d-block h-100 px-2 mb-0 text-center">
                                <input type="checkbox" name="checkedIds" value="@item.Id" class="align-middle">
                            </label>
                        </td>
                        <td>
                            <a asp-action="View" asp-route-id="@item.Id">
                                @Html.DisplayFor(modelItem => item.Name)
                            </a>
                        </td>
                        <td>
                            @Html.DisplayFor(modelItem => item.Employees.Count)
                        </td>
                        <td class="text-right">
                            <a asp-action="Edit" asp-route-id="@item.Id">Edit</a> |
                            <a asp-action="Delete" asp-route-id="@item.Id">Delete</a>
                        </td>
                    </tr>
                }
            </tbody>
        </table>
        <div class="noscript-visible">
            <button type="submit" name="button" class="btn-secondary text-danger" id="btnDelete" value="delete">Delete</button>
        </div>
    </form>
</div>

<div class="bg-light my-4">
    <div class="container py-3">
        @await Html.PartialAsync("_PaginationPartial", new PaginationViewModel
        {
            List = (IPagedList)Model,
            GeneratePageUrl = page => Url.Action("Index", new { page = page, q = ViewData["q"] })
        })
    </div>
</div>
